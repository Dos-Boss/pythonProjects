#!/usr/bin/env python3

# - Brendan McCann
# - 14/07/22
# - Multi-Threaded Port Scanner

import socket
import time
from IPy import IP
import threading
from queue import Queue

port_range = 1000
timeout = 0.3
print_lock = threading.Lock()
q = Queue()
targets = input("Please enter target/s to scan: ")

def checkIP(ip):
    try:
        IP(ip)
        return(ip)
    except ValueError:
        return socket.gethostbyname(ip)

def getBanner(sock):
    return sock.recv(1024)

def testPort(ipaddress, port):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.settimeout(timeout)

    with print_lock:
        try:
            connection = sock.connect((ipaddress, port))
            try:
                banner = getBanner(sock)
                print("[*] Port " + str(port) + " is open: " + str(banner.decode().strip('\n')))
            except:
                print("[*] Port " + str(port) + " is open")
        except:
            pass
    return

def scan(target):
    clean_ipaddress = checkIP(target)
    print('\n' + "[-] Scanning Target: " + str(target))
    start = time.time()
    for port in range(1, port_range + 1):
        testPort(clean_ipaddress, port)
    end = time.time()
    print("[-] Scanned " + str(port_range) + " ports in " + str(round(end - start)) + " seconds")
    return

def threader():
    while True:
        worker = q.get()
        scan(worker)
        q.task_done()

def main():
    for x in range(12):
        t = threading.Thread(target=threader)
        t.daemon = True
        t.start()

    if "," in targets:
        for ip in targets.split(","):
            q.put((ip.strip(' ')))
            q.join()
    else:
        q.put((targets.strip(' ')))
        q.join()

main()
